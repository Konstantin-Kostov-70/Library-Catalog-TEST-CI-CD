name: LibraryCatalog CI/CD
 
on:
  push:
    branches:
      - "main"
 
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v3
      name: Checkout repo
 
    - uses: actions/setup-node@v3
      name: Use Node.js 18.x
      with:
        node-version: 18.x
        cache: 'npm'
 
    - run: npm install
      name: Install dependencies
 
    - run: npm i -g pm2
      name: Install pm 2
 
    - run: pm2 start server/server.js
      name: Start API server
 
    - name: Install playwright browsers
      run: npx playwright install --with-deps
 
    - name: Run tests
      run: npx playwright test
 
    - name: Stop server
      run: pm2 stop server
 
  deploy:
    name: "Deploy on Render.com"
    needs:
      - build
    runs-on: ubuntu-latest
 
    steps:
      - name: Render Deploy Action
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API }}

# name: Node.js CI

# on:
#   push:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [18.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm install
#     - run: npx playwright install
#     - run: npm install -D @playwright/test
#     - run: npm start & sleep 5
#     - run: node server/server.js & sleep 5
#     - run: npx playwright test tests/ui.test.js

#   deploy:

#     needs: build
  
#     runs-on: ubuntu-latest
#     steps:
#       - name: Deploy to production
#         uses: johnbeynon/render-deploy-action@v0.0.8
#         with:
#           service-id: ${{ secrets.SERVICE_ID }}
#           api-key: ${{ secrets.RENDER_API }}  
